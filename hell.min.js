class Area{constructor(e,t,s,i,a){this.x=Math.round(e),this.y=Math.round(t),this.w=Math.max(Math.round(s),1),this.h=Math.max(Math.round(i),1),this.c=a}isInside(e,t){return e>=this.x&&e<this.x+this.w&&t>=this.y&&t<this.y+this.h}}class Node extends Area{constructor(e,t,s,i){super(e,t,s,i,Math.floor(random(255))),this.paths=[],this.walls=[]}split(e){if(this.a||this.b)return!1;const t=Math.random()>this.w/(this.w+this.h);if(e>(t?this.h:this.w))return!1;const s=(t?this.h:this.w)-e;if(s<e)return!1;const i=Math.floor(random(e,s));return t?(this.a=new Node(this.x,this.y,this.w,i),this.b=new Node(this.x,this.y+i,this.w,this.h-i)):(this.a=new Node(this.x,this.y,i,this.h),this.b=new Node(this.x+i,this.y,this.w-i,this.h)),!0}createRooms(){if(this.a||this.b)this.a&&this.a.createRooms(),this.b&&this.b.createRooms(),this.a&&this.b&&this.createPath(this.a.getRoom(),this.b.getRoom());else{const e=Math.floor(random(3,this.w-2)),t=Math.floor(random(3,this.h-2)),s=Math.floor(random(1,this.w-e-1)),i=Math.floor(random(1,this.h-t-1));this.room=new Room(s+this.x,i+this.y,e,t,"plum")}}createWalls(){if(this.paths.length){let e=[];this.a&&(e=e.concat(this.a.getRooms())),this.b&&(e=e.concat(this.b.getRooms()));for(let t=this.x;t<this.x+this.w;t++)for(let s=this.y;s<this.y+this.h;s++){let i=!1;for(let a=0;a<e.length;a++)e[a].isInside(t,s)&&(i=!0);for(let e=0;e<this.paths.length;e++)this.paths[e].isInside(t,s)&&(i=!0);i||this.walls.push(new Wall(t,s))}}else this.a&&this.a.createWalls(),this.b&&this.b.createWalls()}getRooms(){if(this.room)return[this.room];{let e,t;return this.a&&(e=this.a.getRooms()),this.b&&(t=this.b.getRooms()),e||t?e?t?e.concat(t):[t]:[e]:null}}getRoom(){if(this.room)return this.room;{let e,t;return this.a&&(e=this.a.getRoom()),this.b&&(t=this.b.getRoom()),e||t?t?e&&random(1)>.5?e:t:e:null}}createPath(e,t){let s={x:Math.floor(random(e.x+1,e.x+e.w-2)),y:Math.floor(random(e.y+1,e.y+e.h-2))},i={x:Math.floor(random(t.x+1,t.x+t.w-2)),y:Math.floor(random(t.y+1,t.y+t.h-2))},a=i.x-s.x,l=i.y-s.y;a<0?l<0?random(1)>.5?(this.paths.push(new Path(i.x,s.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(i.x,i.y,1,Math.abs(l)+1,"gold"))):(this.paths.push(new Path(i.x,i.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(s.x,i.y,1,Math.abs(l)+1,"gold"))):l>0?random(1)>.5?(this.paths.push(new Path(i.x,s.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(i.x,s.y,1,Math.abs(l)+1,"gold"))):(this.paths.push(new Path(i.x,i.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(s.x,s.y,1,Math.abs(l),"gold"))):this.paths.push(new Path(i.x,i.y,Math.abs(a)+1,1,"gold")):a>0?l<0?random(1)>.5?(this.paths.push(new Path(s.x,i.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(s.x,i.y,1,Math.abs(l)+1,"gold"))):(this.paths.push(new Path(s.x,s.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(i.x,i.y,1,Math.abs(l)+1,"gold"))):l>0?random(1)>.5?(this.paths.push(new Path(s.x,s.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(i.x,s.y,1,Math.abs(l)+1,"gold"))):(this.paths.push(new Path(s.x,i.y,Math.abs(a)+1,1,"gold")),this.paths.push(new Path(s.x,s.y,1,Math.abs(l)+1,"gold"))):this.paths.push(new Path(s.x,s.y,Math.abs(a)+1,1,"gold")):l<0?this.paths.push(new Path(i.x,i.y,1,Math.abs(l)+1,"gold")):this.paths.push(new Path(s.x,s.y,1,Math.abs(l)+1,"gold"))}display(){"undefined"!=typeof p5&&(textSize(14),fill("blue"),textAlign(LEFT,TOP),text(`${this.x},${this.y}`,this.x*cell.w,this.y*cell.h)),this.room&&this.room.display(),this.a&&this.a.display(),this.b&&this.b.display();for(let e=0;e<this.paths.length;e++)this.paths[e].display();for(let e=0;e<this.walls.length;e++)this.walls[e].display()}}class Map{constructor(e,t,s,i){this.cols=e,this.rows=t,this.minNodeSize=s,this.maxNodeSize=i,this.nodes=[],this.walls=[]}updateSize(e,t,s,i){this.cols=e,this.rows=t,this.minNodeSize=s,this.maxNodeSize=i}build(e,t){this.walls=[],this.nodes.push(new Node(e.w,e.h,this.cols-2*e.w,this.rows-2*e.h)),console.groupCollapsed("load map"),console.time("nodes");let s=!0;for(;s&&this.nodes.length<t;){s=!1;for(let e=0,i=this.nodes.length;e<i;e++){const i=this.nodes[e];!i.a&&!i.b&&this.nodes.length<t-1&&(i.w>this.maxNodeSize||i.h>this.maxNodeSize||random(1)>.5)&&i.split(this.minNodeSize)&&(this.nodes.push(i.a),this.nodes.push(i.b),s=!0)}}console.timeEnd("nodes"),console.time("rooms"),this.nodes[0].createRooms(),console.timeEnd("rooms"),console.time("walls");for(let e=0;e<this.cols;e++)for(let t=0;t<this.rows;t++){let s=!1;for(let i=0;i<this.nodes.length;i++){this.nodes[i].room&&this.nodes[i].room.isInside(e,t)&&(s=!0);for(let a=0;a<this.nodes[i].paths.length;a++)this.nodes[i].paths[a].isInside(e,t)&&(s=!0)}s||this.walls.push(new Wall(e*cellSize.w,t*cellSize.h,"green"))}console.timeEnd("walls"),console.groupEnd()}}class Room extends Area{constructor(...e){super(...e),this.texture=new Texture({frame:"randomIndex",center:!0},!1),this.addTextureAnimation();let t=[];for(let e=gme.lvl,s=gme.lvl+Cool.random(5,10);e<s;e++){const i=1-(e-gme.lvl)/s;for(let s=0;s<Math.floor(10*i);s++)t.push(e)}console.log(t);for(let e=this.x;e<this.x+this.w;e++)for(let s=this.y;s<this.y+this.h;s++)this.texture.addLocation(e*cellSize.w,s*cellSize.h,Cool.random(t));console.log(this.texture.locations),this.debug=!0,this.takenCells=[]}addTextureAnimation(){this.texture.animation=gme.anims.textures.dirt}getCell(e){const t=[];for(let e=this.x;e<this.x+this.w;e++)for(let s=this.y;s<this.y+this.h;s++)this.takenCells.some(t=>t.x==e&&t.y==s)||t.push({x:e,y:s});const s=Cool.random(t);return s&&this.takenCells.push({...s,label:e}),s}display(){this.texture.display(),this.debug&&mapAlpha>0&&(gme.ctx.globalAlpha=mapAlpha/2,gme.ctx.fillStyle=this.c,gme.ctx.fillRect(this.x*mapCellSize,this.y*mapCellSize,this.w*mapCellSize,this.h*mapCellSize),gme.ctx.fillStyle="white",gme.ctx.font=mapCellSize/2+"px sans-serif",gme.ctx.fillText(`${this.x},${this.y}`,this.x*mapCellSize,this.y*mapCellSize+10),gme.ctx.globalAlpha=1)}update(e){this.texture.update(e)}}class HellItem extends Entity{constructor(e,t,s,i,a){super({x:e,y:t}),this.addAnimation(s);for(const e in i)this[e]=i[e]||0;this.consumeString,"food"==a?(this.consumeString="Eat",this.c="red"):"scripture"==a&&(this.c="lightblue",this.consumeString="Read")}}class MapItem extends HellItem{constructor(...e){super(...e),this.isColliding=!1,this.consoleMessage=`${this.consumeString} ${this.label}`,this.xKey=()=>{map.remove(this),player.consume(this,this.type)}}display(){super.display(),mapAlpha>0&&(gme.ctx.globalAlpha=mapAlpha,gme.ctx.fillStyle=this.c,gme.ctx.fillRect(this.origin.x/cellSize.w*mapCellSize,this.origin.y/cellSize.h*mapCellSize,8,8),gme.ctx.globalAlpha=1)}update(e){super.update(e),!this.collide(player)||this.isColliding||player.isColliding?!this.collide(player)&&this.isColliding&&(ui.console.setMsg(""),this.isColliding=!1,player.isColliding=!1):(ui.console.setMsg("Press X to "+this.consoleMessage),this.isColliding=!0,player.isColliding=!0,ui.console.xKey=()=>{this.isColliding=!1,player.isColliding=!1,this.xKey()})}}class HellGame extends Game{constructor(...e){super(...e),this.lvl=0}set scene(e){e!=this.scenes._current&&(this.scenes.current=e)}get currentScene(){return this.scenes.current}get currentSceneName(){return this.scenes._current}get lvlName(){return 0==this.lvl?"Purgatory":"Ring of Hell "+this.lvl}}class HellGate extends MapItem{constructor(...e){super(...e),this.c="orange",this.consoleMessage="Enter Judgement's Gate",this.xKey=()=>{gme.scene="message",player.died=!0,player.checkMorality()}}}class HellMap extends Map{constructor(e,t,s,i){super(e,t,s,i),this.startCols=e,this.startRows=t,this.startMinNodeSize=s,this.startMaxNodeSize=i,gme.scenes.map.add(this),this.items=new SpriteCollection,Object.assign(this,itemMixin)}build(e){console.time("map"),this.updateSize(this.startCols+2*gme.lvl,this.startRows+2*gme.lvl,this.startMinNodeSize+gme.lvl,this.startMaxNodeSize+2*gme.lvl),super.build({w:Math.ceil(gme.width/2/cellSize.w),h:Math.ceil(gme.height/2/cellSize.h)},6+gme.lvl),this.roomCount=0,this.nodes.forEach(e=>{e.room&&this.roomCount++});const t=["#ffffff","#F8F8F8","#F0F0F0","#E8E8E8","#E0E0E0","#D8D8D8","#D0D0D0","#C8C8C8","#C0C0C0","#B8B8B8","#B0B0B0","#A8A8A8","#A0A0A0","#989898","#909090","#888888","#808080","#787878","#707070","#686868","#606060","#585858","#505050","#484848","#404040","#383838","#303030","#282828","#202020","#181818","#101010","#080808"],s=t[Math.min(gme.lvl,t.length-1)];this.walls.forEach(e=>{e.texture.animation.over={c:s}}),this.nodes.forEach(e=>{e.room&&(e.room.texture.animation.over={c:s}),e.paths&&e.paths.forEach(e=>{e.texture.animation.over={c:s}})}),this.items=new SpriteCollection,this.addItems("food",MapItem),this.addItems("scripture",MapItem),this.addItems("sinner",Sinner,1),e&&e()}addHellsGate(){const e=this.nodes.filter(e=>e.room),t=shuffle(e.filter(e=>!e.room.takenCells.some(e=>"player"==e.label)));let s;for(let e=0;e<t.length&&(s=t[e].room.getCell("hells_gate"),!s);e++);if(!s)for(let e=0;e<t.length&&(s=t[e].room.getCell("hells_gate"),!s);e++);s||console.log(t,e);const i=new HellGate(s.x*cellSize.w+Cool.random(-cellSize.w/4,cellSize.w/4),s.y*cellSize.h+Cool.random(-cellSize.h/4,cellSize.h/4),gme.anims.sprites.hells_gate,["fart",0,0,0,0,0,0,0,0],"gate");this.items.add(i)}prob(e){return e=e.replace(/p(?![a-z])/g,Cool.map(gme.lvl,0,28,0,1)),Function("return "+e)().clamp(0,1)}addItems(e,t,s){const i=s||random(1,this.roomCount),a=gme.data.items.entries.filter(t=>t.type==e),l=[],h=[];for(let e=0;e<a.length;e++){const t=this.prob(a[e].probability);if(1==t)h.push(e);else if(t>0)for(let s=0;s<100*t;s++)l.push(e)}for(;h.length<i;)h.push(Cool.random(l.filter(e=>!h.includes(e))));for(;h.length>0;){const s=a[h.pop()],i=shuffle(this.nodes.filter(e=>e.room));for(let a=0;a<i.length;a++){const l=i[a].room.getCell(e);if(l){const i=new t(l.x*cellSize.w+Cool.random(-cellSize.w/4,cellSize.w/4),l.y*cellSize.h+Cool.random(-cellSize.h/4,cellSize.h/4),gme.anims.items[s.label],s,e);this.items.add(i);break}}}}add(e){this.items.add(e)}remove(e){this.items.remove(e)}display(){this.nodes[0].display();for(let e=0;e<this.walls.length;e++)this.walls[e].display();this.items.display()}update(){const e=new Cool.Vector(-player.mapPosition.x+gme.width/2,-player.mapPosition.y+gme.height/2);for(let t=0;t<this.nodes.length;t++){const s=this.nodes[t];s.room&&s.room.update(e);for(let t=0;t<s.paths.length;t++)s.paths[t].update(e)}for(let t=0;t<this.walls.length;t++)this.walls[t].update(e);let t=!1;for(let e=0;e<map.walls.length;e++){map.walls[e].collide(player)&&(t=!0)}t&&player.back(),this.items.all(t=>{t.update(e)})}}class HellMessage extends Text{constructor(e,t,s,i,a){super(e,t,s,i,a),gme.scenes.addToDisplay(this,["message"]),this.list=[],this.continue=new Text(this.x,this.y,"",100,gme.anims.lettering.messages)}next(){0==this.list.length?(this.set(""),player.died?loadNextMap():gme.scene="map"):this.set(this.list.shift())}add(e){let t=!1,s=4*this.wrap,i=0;for(let a=0;a<e.length;a++)a==i+s||t?e[a].match(/[\n\r\s]/g)?(this.list.push(e.substring(i,a)),t=!1,i=a+1):t=!0:i+s>e.length&&(this.list.push(e.substring(i,e.length)),a=e.length);this.msg||this.set(this.list.shift())}set(e){if(super.setMsg(e),e){const t=e.match(/[\n\r]/g),s=this.y+35*(this.breaks.length+2+(t?t.length:0));this.continue.setPosition(this.x,s),this.continue.setMsg("Press X to continue"),ui.console.xKey=()=>{this.next()}}}display(){super.display(),this.continue.display()}reset(){this.set("")}}class Pack{constructor(){this.size=3,this.maxSize=9,this.x=centerAlign,this.y=packY,this.w=128,this.h=128,this.state="player",gme.scenes.pack.addUI(this),Object.assign(this,itemMixin),this.label=new Text(this.x,140,"Pack",9,gme.anims.lettering.metrics),this.items=new SpriteCollection,this.labels=[];for(let e=0;e<this.maxSize;e++)this.labels[e]=new Text(this.x+this.w*e,this.y+Math.floor(e/3)*this.h-this.h/2,""+(e+1),1,gme.anims.lettering.metrics)}add(e,t){return gme.scene="pack",this.items.length<this.size?(this.items.add(new PackItem(...e)),ui.message.set(`You picked up the ${t}.`),this.items.all((e,t)=>{e.position.x=this.x+this.w*t+this.w/2,e.position.y=this.y+Math.floor(t/3)*this.h}),!0):(gme.scene="message",ui.message.set("Your pack is full."),!1)}remove(e){this.items.remove(e)}display(){this.label.display();for(let e=0;e<this.size;e++)this.labels[e].display();this.items.display()}}class PackItem extends HellItem{constructor(...e){super(...e),this.displayPack=!1,Object.assign(this,buttonMixin);let t="interact";"food"==this.type?t="eat":"scripture"==this.type&&(t="read"),this.consume=new HellTextButton(leftAlign,packY-35,`${this.consumeString} ${this.label}`,gme.anims.lettering.messages,t),this.consume.isActive=!1,this.consume.onClick=()=>{player.consume(this,this.type),pack.remove(this)},this.drop=new HellTextButton(leftAlign,packY,"Drop "+this.label,gme.anims.lettering.messages,"drop"),this.drop.isActive=!1,this.drop.onClick=()=>{pack.remove(this);const t=new MapItem(...e);t.setPosition(player.x,player.y),map.add(t),gme.scene="map"},this.ui=new SpriteCollection([this.consume,this.drop])}display(){super.display(),this.ui.display()}onClick(){if("npc"==pack.state){pack.remove(this),ui.message.reset();let e=0;for(const t in player.world){const s=+this[t]+sinner[t];s>0?e++:s<0&&e--}gme.scene="message",ui.message.set(e<0?`The ${sinner.label} defeated the ${this.label} with sin.`:`The ${this.label} defeated the ${sinner.label} with righteousness.`),player.morality.adjust+=e,console.log(e),ui.metrics.morality.update(),sinner=void 0,pack.state="player"}else if("player"==pack.state){const e=!this.displayPack;pack.items.all(e=>e.togglePackDisplay(!1)),this.togglePackDisplay(e)}}togglePackDisplay(e){this.displayPack=void 0===e?!this.displayPackUI:e,this.ui.all(e=>{e.isActive=this.displayPack})}over(e,t){super.over(e,t),this.ui.all(s=>s.over(e,t))}out(e,t){super.out(e,t),this.ui.all(s=>s.out(e,t))}down(e,t){super.down(e,t),this.ui.all(s=>s.down(e,t))}up(e,t){super.up(e,t),this.ui.all(s=>s.up(e,t))}}class Path extends Room{addTextureAnimation(){this.texture.animation=gme.anims.textures.grass}}class Player extends Sprite{constructor(e,t,s,i){super(Math.round(t),Math.round(s)),this.mapPosition={x:Math.round(t),y:Math.round(s)},this.prevPosition={x:this.mapPosition.x,y:this.mapPosition.y},this.center=!0,this.debug=i||!1,this.speed=new Cool.Vector(8,8),this.addAnimation(e),this.animation.state="idle",this.setCollider(25,6,78,90),this.input={right:!1,up:!1,left:!1,down:!1},this.target=new Cool.Vector(0,0),this.metricCount=0,this.died=!1,this.health=100,this.hunger=0,this.hungerRate=.05,this.hungerLevel=0,this.hungerString="",this.morality={gluttony:0,sloth:0,lust:0,pride:0,greed:0,envy:0,wrath:0,adjust:0},this.world={gluttony:0,sloth:0,lust:0,pride:0,greed:0,envy:0,wrath:0}}get moralityScore(){return Object.values(this.morality).reduce((e,t)=>e+t)}inputKey(e,t){this.input[e]=t}setTarget(e,t){this.target={x:e,y:t},this.hunger+=this.hungerRate}update(){Math.abs(this.target.x)<this.speed.x&&(this.target.x=0),Math.abs(this.target.y)<this.speed.y&&(this.target.y=0),this.prevPosition={x:this.mapPosition.x,y:this.mapPosition.y};let e=this.animation.stateName.includes("idle")?this.animation.stateName:Cool.random(["idle"]);(this.input.up||this.target.y<0)&&(this.target.y<0&&(this.target.y+=this.speed.y),this.mapPosition.y>gme.bounds.top&&(this.mapPosition.y-=this.speed.y),e="right"),(this.input.down||this.target.y>0)&&(this.target.y>0&&(this.target.y-=this.speed.y),this.mapPosition.y<gme.bounds.bottom&&(this.mapPosition.y+=this.speed.y),e="left"),(this.input.right||this.target.x>0)&&(this.target.x>0&&(this.target.x-=this.speed.x),this.mapPosition.x<gme.bounds.right&&(this.mapPosition.x+=this.speed.x),e="right"),(this.input.left||this.target.x<0)&&(this.target.x<0&&(this.target.x+=this.speed.x),this.mapPosition.x>gme.bounds.left&&(this.mapPosition.x-=this.speed.x),e="left"),this.animation.state=e,this.died||(200==this.metricCount&&(this.checkHunger(),this.metricCount=0),this.metricCount++)}back(){this.target={x:0,y:0},this.mapPosition=this.prevPosition}spawn(){const e=shuffle(map.nodes.filter(e=>e.room));let t;for(let s=0;s<e.length&&(t=e[s].room.getCell("player"),!t);s++);this.mapPosition.x=t.x*cellSize.w,this.mapPosition.y=t.y*cellSize.h}reborn(){this.health=100,ui.metrics.level.update(),this.died=!1,this.speed.x=8,this.speed.y=8,this.target.x=0,this.target.y=0}checkMorality(){0==this.moralityScore?(ui.message.add("You hath been morally neutral."),ui.message.add(`You will remain in ${0==gme.lvl?"purgatory":"this ring of hell"}.`)):this.moralityScore>0?gme.lvl<=0?(gme.lvl,gme.scene="win",ui.message.continue.setMsg("Play again"),ui.message.next=loadNextMap):(gme.lvl-=1,ui.message.add("You hath acted morally.")):(ui.message.add("You are a sinner."),ui.message.add("You descend further into hell."),gme.lvl+=1),ui.metrics.morality.update()}checkHunger(){Math.floor(this.hunger)>this.hungerLevel?(this.hungerLevel=Math.floor(this.hunger),this.hungerLevel>2&&(this.speed.x-=1,this.speed.y-=1)):0==this.hunger&&(this.hungerLevel=0),0==this.hungerLevel?this.hungerString="":1==this.hungerLevel?this.hungerString="You feel a pang of hunger.":2==this.hungerLevel?this.hungerString="Was that sound your stomach?":3==this.hungerLevel?this.hungerString="Your stomach growled.":4==this.hungerLevel?this.hungerString="Your stomach is twisting in pain.":5==this.hungerLevel?this.hungerString="You feel weak.":6==this.hungerLevel?this.hungerString="You feel light headed.":7==this.hungerLevel?this.hungerString="Your body is desparate for food.":8==this.hungerLevel&&(gme.scene="message",ui.message.set("You starved to death."),this.died=!0,this.checkMorality()),ui.metrics.hunger.update()}consume(e,t){let s;switch(t){case"food":s="ate";break;case"scripture":s="read"}gme.scene="message",ui.message.set(`You ${s} the ${e.label}.`),ui.message.add(e.source),"food"==t&&(this.hunger=0,ui.message.add("Your hunger hath abated."),this.checkHunger(),this.speed.x=8,this.speed.y=8);for(const s in this.world)0!=+e[s]&&("food"==t?(this.morality[s]+=+e[s]+this.world[s],ui.message.add(+e[s]<0?"You hath sinned":"You hath acted morally")):"scripture"==t&&(this.world[s]+=+e[s],ui.message.add(+e[s]<0?"With gain knowledge of "+s:"You learn "+s)));this.speed.x+=+e.speed,this.speed.y+=+e.speed,ui.metrics.morality.update()}display(){super.display(),mapAlpha>0&&(gme.ctx.globalAlpha=mapAlpha,gme.ctx.fillStyle="blue",gme.ctx.fillRect(this.mapPosition.x/cellSize.w*mapCellSize,this.mapPosition.y/cellSize.h*mapCellSize,8,8),gme.ctx.globalAlpha=1)}}class Sinner extends MapItem{constructor(...e){super(...e),this.c="purple",this.consoleMessage="fight "+this.label,this.xKey=()=>{let e=0;for(const t in player.world){const s=+player.morality[t]+ +player.world[t]+this[t];s>0?e++:s<0&&e--}gme.scene="message",0==e?ui.message.set(`You and ${this.label} are equals in sin.`):e>0?ui.message.set(`The ${this.label} defeated you with sin.`):e>0&&ui.message.set(`You defeated the ${this.label} with righteousness.`),player.morality.adjust+=e,e>0&&map.remove(this),ui.metrics.morality.update()}}get moralityScore(){let e=0;for(const t in player.world)e+=this[t];return e}}class UIMetric extends Text{constructor(e,t,s){const i=s();super(e,t,i,i.length,gme.anims.lettering.metrics),this.callback=s,ui.addToDisplay(this)}update(){super.setMsg(this.callback()),this.wrap=this.msg.length,this.setBreaks()}}class Wall extends Sprite{constructor(e,t,s){super(e*cellSize.w,t*cellSize.h,cellSize.w,cellSize.h),this.center=!0,this.origin=new Cool.Vector(e,t),this.texture=new Texture({frame:"index",center:!0,animation:gme.anims.textures.walls},!1);let i=[];for(let e=2*gme.lvl,t=gme.lvl+Cool.random(5,10);e<t;e++){const s=1-(e-gme.lvl)/t;for(let t=0;t<Math.floor(10*s);t++)i.push(e)}for(let s=0,a=Cool.random([1,2,2,2,3,3,4]);s<a;s++)this.texture.addLocation(e+Cool.random(-cellSize.w/3,cellSize.w/3),t+Cool.random(-cellSize.h/3,cellSize.h/3),Cool.random(i))}display(){super.display(),this.texture.display()}update(e){this.position.x=this.origin.x+e.x,this.position.y=this.origin.y+e.y,this.texture.update(e)}}window.random=Cool.random;const gme=new HellGame({width:window.innerWidth,height:window.innerHeight,lps:24,mixedColors:!0,checkRetina:!0,debug:!0,stats:!1,scenes:["map","message","loading","win"]});function shuffle(e){let t,s,i=e.length;for(;0!==i;)s=Math.floor(Math.random()*i),i-=1,t=e[i],e[i]=e[s],e[s]=t;return e}let player,god;gme.load({ui:"data/ui.json",sprites:"data/sprites.json",textures:"data/textures.json",items:"data/items.csv",lettering:"data/lettering.json"});let map,ui,mapSize=12,ratio=window.innerWidth/window.innerHeight,cellSize={w:256,h:256},grafWrap=28,leftAlign=6,centerAlign=18*grafWrap,packY=260;const welcomeMessage=`Welcome to Infinite Hell. \nYou are in ${gme.lvlName}. \nYou are morally neutral. \n\nYou must perform a moral act to find your way to Heaven. \n\nIf you sin, you will descend further into Hell.`;let mapAlpha=0,mapCellSize=20;function start(){map=new HellMap(Math.round(mapSize*ratio),mapSize,mapSize/4,mapSize/2-1),player=new Player(gme.anims.sprites.player,gme.width/2,gme.height/2),god=new Sprite(256,gme.height/2),god.center=!0,god.addAnimation(gme.anims.sprites.god),gme.scenes.add(god,"win","display"),ui=new Scene,ui.metrics={};const e=new UI({x:-200,y:22,animation:gme.anims.ui.hell_icon});ui.addToDisplay(e),ui.metrics.level=new UIMetric(e.x+40,8,()=>gme.lvl.toString());const t=new UI({x:-100,y:22,animation:gme.anims.ui.morality_icon});t.animation.state="neutral",ui.addToDisplay(t),ui.metrics.morality=new UIMetric(t.x+40,4,()=>(0==player.moralityScore?t.animation.state="neutral":player.moralityScore<0?t.animation.state="bad":player.moralityScore>0&&(t.animation.state="good"),player.moralityScore.toString())),ui.metrics.hunger=new UIMetric(20,28,()=>player.hungerString),ui.metrics.hunger.letters=gme.anims.lettering.messages,ui.console=new Text(leftAlign,8,"",2*grafWrap,gme.anims.lettering.messages),ui.addToDisplay(ui.console),ui.console.xKey=void 0,ui.message=new HellMessage(6,40,"",grafWrap,gme.anims.lettering.messages),ui.message.set(welcomeMessage),ui.message.continue.setMsg("Press X to begin"),gme.scene="message",ui.console.xKey=loadNextMap}function loadNextMap(){gme.scene="loading",ui.message.set(`Building ${gme.lvlName} ...`),setTimeout(buildMap,250)}function buildMap(){map.build((function(){ui.message.set(""),gme.scene="map",console.timeEnd("map"),player.died&&player.reborn(),player.spawn(),map.addHellsGate(),gme.setBounds("top",gme.height/2),gme.setBounds("left",gme.width/2),gme.setBounds("right",map.cols*cellSize.w-gme.width/2),gme.setBounds("bottom",map.rows*cellSize.h-gme.height/2)}))}function update(){player.update(),gme.scenes.current.update()}function draw(){gme.scenes.current.display(),player.display(),gme.ctx.fillStyle="#2c2c2c",gme.ctx.fillRect(0,0,gme.width,40),ui.display()}function sizeCanvas(){gme.width=window.innerWidth,gme.height=window.innerHeight,gme.canvas.width=window.innerWidth*gme.dpr,gme.canvas.height=window.innerHeight*gme.dpr,gme.ctx.scale(gme.dpr,gme.dpr),gme.canvas.style.zoom=1/gme.dpr,gme.ctx.miterLimit=1,gme.ctxStrokeColor=void 0,player.position.x=gme.width/2,player.position.y=gme.height/2}function keyDown(e){switch(e){case"left":player.inputKey("left",!0);break;case"up":player.inputKey("up",!0);break;case"right":player.inputKey("right",!0);break;case"down":player.inputKey("down",!0);break;case"x":ui.console.xKeyDown=!0}}function keyUp(e){switch(e){case"left":player.inputKey("left",!1);break;case"up":player.inputKey("up",!1);break;case"right":player.inputKey("right",!1);break;case"down":player.inputKey("down",!1);break;case"x":if(ui.console.xKeyDown&&ui.console.xKey){const e=ui.console.xKey;ui.console.xKey=void 0,e(),ui.console.setMsg(""),ui.console.xKeyDown=!1}}}document.addEventListener("keydown",e=>{"Equal"==e.code?mapAlpha=Math.min(1,mapAlpha+.5):"Minus"==e.code&&(mapAlpha=Math.max(0,mapAlpha-.5))});
//# sourceMappingURL=src_maps/hell.min.js.map
