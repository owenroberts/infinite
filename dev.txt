3.5.2020
- fuck this takes forever
3.7.2020
	- fix starting point
	- buffer one cell
	- dirt more sparse
	- cluster walls
	- smaller skully
	- buffer half screen width at least
	- wall collisions
		- everything centered vs not centered
	- need puddles 
	- to do -
		- grass in hell?
		- partition collisions and test performance
		- player gets stuck while clicking...
			- adjust player collider
		- player spawns on wall ...
		- game better name for .data
		- text.js active vs sprite.js alive (really "visible")
		- item on wall ... 
		- item ui class 
4.3.2020
- after jam list of stuff to do
4.8.2020
	- get inventory buttons to work
		- consider adding separate button sprites ...
			- and remove over/out/down/up states from sprite class
		- add set position or position setter to sprite to make positions updates consistent
		- after adding sprite, should click on it to change menu
		- switch drop buttons ... 
		- invetory items/messages are not getting removed correctly ...
			- maybe just create and delete everything instead of moving everything around so much ...
4.9.2020	
	- rename "alive/active"
		- isActive is best for now
4.11.2020
	- optimize map generation
		- rooms take longer 
			- loading json takes time, many references to same json
			- this is probably normal
			- texture with many locations is loading a new animation for each one, readings drawings etc.
			- *implement the text approach to drawing an animation in multiple places ...
				- textures aren't interactive, can be anims not sprites...
				- walls have their own colliders
				- this is because drawings are unpacking arrays [x,y] to objects {x: 0, y: 0}
					- sacrificed load time for 
				- this is probably same issue with walls, they all textures with multiple locations ...
				- there is still an animation for every texture -- definitely game level issue
			- maybe game.load makes animations and somehow everything references the animations?
			- optimize animation load drawing time ... 
				- or just use [x, y]
			- *items were centering themselves, textures don't do that - items were also checking if they were on the fucking screen .... 
			- items would actually be fine if! you were using one animation instead of a million ... 
4.12.2020
	- game load anims ... 
	- no more src or fetch anywhere !!!!!
	- text wrap for messages based on 960 browser window ... or 1280
4.13.2020
	- upate game to class
		- then hell.js is class extending game? or game is object in hell.js?
		- need to settle on permanent name here because base classes refer to Game.ctx etc
			- do editor etc. later
			- Game class is really more like GameRenderer or something or GameEngine or LnsEngine
	- figure out how to add scenes and stuff
		- manager + scenemaanger
		- does this really save a lot of time?
		- i can just add things directly to scenes maybe ... 
		- i think this is pretty nice
	- do i really need to be able to say gme.scene ?
		- gme.scenes.current or gme.currentScene is clearer
		- but gme.scene is superfluous with scene manager
4.14.2020
	- finish lines timeline
		- collapse layers
			- save in settings? maybe use setting to look at settings within ui modules
		-  other functionality of layers/frames
			- cut segment etc, add to edit modal, or rewrite original funcs?
				- something that i want to do to one at a time vs multiple
					(multiple layers can be toggled...)
				- split modal for now, maybe frame based split button later (ignore toggle)
		- add tweens to timeline ...
		- cloning drawings for editing drawing in layer
		- drag and drop tweens would be fun ... 
		- tween/layer ui super class?
		- tween class, super for layer and tween ... endFrame, startFrame
		- fix toggle handler/onoff
			- really need to clarify what toggle "on" and "off" mean
4.15.2020
		- animation sub class for animate that uses layer class and more layer functions/getters/setters like get toggled layers
		- drawing class too??
			- useful for cut line, cut segment etc, then i dont have to repeat that code 
	- look at other lines/game issues
		- rename animation class ... fuck
		- new drawing doesn't retain new lines setup
		- insert doesn't work with layers ...
		- lines on sidecar dont take on mobile stuff ... uh duh
4.16.2020
		- zoom ui and canvas separately ...
		- cant draw on top part zoomed in after reset .... fixed by doing R/L instead of L/R
			- blocked by tooltip
		- state updates when using next prev
		- update canvas size when fitting to canvas ...
		- turn off cursor optoin  for ipad
		- apply wiggle to segments ... 
			- this looks cool
			- need to play with lines more ...
			- add option 
			- fuck
			- wiggle is applied 
			- hell yeah
		- lns.ui.timeline.panel.timeline is kinda weird
			- this seems fine
	- game		
		- drawSprites type list of sprites
			- this is covered with scenes
		- Game.sprites and Game.ui defaults
			- Game.data contains sprite info
			- Game.anims contains all loaded animations
		- Game.scenes default?
			- scene, scenemanager
4.17.2020
		- test performance of game with array vs object for ui/scenes
			- scene just uses array, i think thats better
		- loading may just have to be handled by individual games ....
			- nah we load anims now buddy
		- load animations first then make classes ...  yerp
		- what purpose do items have? why not just sprites?
			- update function not in sprite for map
				- item is a sprite that is part of the map, not ui
				- are enemies/obstacles items?
					- they do need to update
				- do all games need maps?
				- update is really more a MapItem thing ... maybe not a default part of a game?

			- might make more sense to call item GameSprite or GameItem or GameObject
			- ItemCollection
			- map uses items
			- scene also refers to item, but prob should be sprite
			- Sprite is the main default class, for UI and Item
			- Item used both as generic like a list has items and as a specific Item is a map version of sprite...
			- Entity is what i used for idtio ... 
				- Entity -> Interactive -> Pickup
				- Player
				- Sprite -> Character
				- Sprite -> Item -> Interactive
				- Sprit -> UI -> Toggle
			- Sprite is just a thing that can be rendered, clicked, moved
			- I think I prefer Entity as something that's in the game, vs Item is things character can collect, or like parts of something else
			- Item Collection is part of Hell Classes
		- adding SpriteCollection as Game Class - could just be Collection
			- Collection is list
			- Manager is object w keys
		- also fixed removing game items in hell message
		- also fixed current state changing issue moving to game
		- generally heading towards objects not automatically adding stuff
			- not anymore!
		- player/map relationship is super confusing ... 
			- easier now with scenes . player is just not on map
		- p5 play style camera? - for now no, this is more resolved with better understanding of map update system than previously
		- make a debug draw function
			- ? this already exists?
			- do i mean debug class?
		- really need to wait for sprites to actually load!
			- no anims!
		- just load json to make different animations ...
			- too many anim objects?
			- hell yes!
		- texture is really annoying, need to separate functions better
			- i think this is better sans src and json etc.
		- use more vectors
			- disadvantage is references getting stuck
			- Cool.Vector is also really long, vs p5.Vector or Cool.Vec or something
		- dont render until offset applied
			- did that shit
4.18.2020
	- js minifier?
		- https://developers.google.com/closure/compiler/
			- nah
		- minify by project vs minify in lines ...
		- try just infinite hell first
			- dont need any interface css ...
		- js is all over the place
		- gulp
			- https://www.freecodecamp.org/news/gulp-4-walk-through-with-example-code-c3c018eab306/
			- es6 issues
			- uglify-js only supports JavaScript (ECMAScript 5).
			- To minify ECMAScript 2015 or above, transpile using tools like Babel.
			- so im converting code to ecma < 5, how does that effect hell.js
		- this is pretty tight actually, but need a template file that works from main project directory and one that works on lines project
4.22.2020
	- finish game updates
		- stat class
			- done
		- sprite use w h instead of width and height
			- ? 
			- would have to refactor a ton of code
			- width and height are better names
			- size could be a vector - size.x and size.y
			- then center is just this.position.subtract(this.size.divide(2)) ... 
			- width and height can be getter/setters .. 
		 	+ - prune sprite.js
		 	- removing all scaling for individual sprites, can be brought back by sub class
		 	- same with physics
		 	- xy - just use x and y? - player.x signifies something else ... 
		 		- could make that mapXY or something which would make it more clear .... 
		 		- player.x player.y is where it is on map, position is where it starts and is drawn
4.23.2020
		- why does fps cap at 9?
			- updated the game update function with one requestAnim
			- added a different stats function - calculates fps over time
				http://jsfiddle.net/m1erickson/CtsY3/
			- may want to get something like mr doob
			- shows draw rate is closer to 10
			- frame rate caps around 43 in map, rises in the inventory - it is just drawing a lot
			- actually mr doob also uses this method sort of, shows range as well ... 
				https://github.com/mrdoob/stats.js/blob/master/src/Stats.js
				- just use this?
				- frames is always just 1?
			- fine for now

		- item vs sprite, params vs xy inconsistent
			- worked out
		- what the actual fuck
			- ?
		- need names of positions to make sense
			- ?
			- Entity 
				- position is really draw position (origin + offset)
				- origin is map position
				- 
		- item update func is more generic map thing
			- entity - thing on map
		- i'm dismantling this stupid fucking system backwards ..
			- hopefully it makes more sense now ....
		- player position isn't supposed to change - "draw position"
		- text + ui class for food 
			- better version of this idea implemented
		- consolidate button and toggle and text ... 
			- i think this is fine, mapped out everything
		- sub classes don't fetch - yes!
	- add gme load to gme constructor?
		- any reason to create game before loading?
		- yes ... loading screen
	- events class?
		- use mouse events and keyboard events separately?
		- any point in having events in separate file?
	- sprite and anim - use ctx parameter? (instead of gme)
		- they are all part of the game section ... 
		- or generic "app"
		- at least gme is probably unique
		- will gme always be called gme?
		- GAME created in class
4.25.2020
	- lines play update
	- consolidate play and timeline panels
		- but i don't really need those buttons open all the time?
		- blender design where timeline and vse are seprate ... 
		- these are technically different things ... fine with this for now
	- better name for animation.state vs animation.currentState - not clear that state is label/string and currentState is start/end values
		- use manager?
		- manager requires a class and i don't want to make a state class at this point
		- should i make a state class ?
			- also add states to the timeline ... 
		- related to range class ... start end and label
		- layers and tweens 
			- startFrame, endFrame
			- sf, ef, sv, ev
			- Range -> FrameRange
			- Tween (FrameRange + Range -> ValueRange)
			- State (FrameRange + Label
		)
		- do all this stuff later ...
	- way to always update ui ... ?
		- not really a clear way to do this...
		- could add it to every button callback but that would be over kill prob
	

4.26.2020
	- working on range class for fun?
		- only needed for animate layers to display the layers
		- LinesAnimation still uses {} layers
		- draw module uses Layer
		- is this useful for LinesAnimate if we want to create layer and drawing classes ?
		- tween goes in the animate folder if not
		- useful with tweens *if*
			- reset tweens automatically called
			- range has some sort of compare method ... 
			- do i really need to reset tweens?  can't i just do it manually?
			- couldn't it be useful?
			- or its a button
			- makes more sense to do it with shift paramters
	
- hell updates
	- what the fuck is crashing the map??
	- make ui class with arrow, metrics, positions/properties etc.
	- wall image changes glitch?
	- rename inventory to "pack"
	- update text line breaks with regex to check space followed by \n\r
	- figure out sinners + food/scripture
	- update other game components
	- room/path setup like the walls
		- ?
	- maps get progressively more complex
		- figure out probabilities of map balance ...
	
	- get rid of float numbers
	- move walls to hellmap?

- try set timeout with game loading
	- load is so much shorter it doesn't matter here
	- revisit with garden or when hell has a lot more assets
- game editor is a whole other story ....
	- update when we revisit garden - "we" lol
	- editor maybe gets its own folder
	- rename classes
	- css to main css folder
- update all interface classes and lines classes (maybe when we gulp ... )
- rewrite animate/interface/drawings ...
- performance test on mapping frames at beginning

5.26.2020
- prob missing indiecade deadline
- what's left to do?
	- sound
	- basically all of the game mechanics and drawings
	
7.2.2020
- map gets bigger -
	- 5 nodes = max 3 rooms + gme.lvl
- add exit -
	- what happens when arriving on exit?
	- option to enter?
		- need to make consume and pickup specific to food/scripture items
		- or part of data?

7.7.2020
7.9.2020
- new data csv-
- add sinners -
	- get sub classes right -
	- give sinner an item -

7.10.2020
7.13.2020
7.14.2020
- lines - retire drawings? can do it with timeline... - 
	- removing only layer with drawing and then readding drawing ...
		- drawing doesn't know the layer properties ...
		- just add current props?
		- save old props in some other structure?
		- search for props like in drawings ...
		- hiding layers and then deleting them later?
		- 
	- dont retire, better to have a separate panel
- combine action food + sinner, scripture + sinner, food + scripture? -
	- player + item
	- "world" metrics + item
	- npc + item
	- item + item?
	- special items?
	- remove continue from give ... 

7.16.2020
- "world" metrics
	- move to global
	- some message like, the world is more lustful, or you must avoid lust

7.27.2020
- redo ui, metrics, interface - 
	- display bg or transparent bg or dont draw behind metrics?
	- literary reference for pack?
	- pack status set by scene, way to tie general ui to actions in game?
	- move pack to the right and keep messages in the same place? - 
	- text placement of hell game and sinners - 

7.28.2020
- read and pick up icons (mouse cursor)
	- icons for all actions
		- read
		- pick up
		- give
		- drop
	- convert -delay 40 -loop 0 -alpha set -dispose previous *.png read.gif

- reveal hells gate by sinning? or some transformation? animal?
	- hells gate just being there makes sense because the player has to make a choice ...
- something better than ui for pickups?
	- could click on map items and bring up message prompt....
	- ? mark icon and then eat or put in pack?
	- this would fit ui somewhat
	- revisit this
- moving arrow keys leaves map ui visible
	- either fix this or remove arrow keys for "release"
	- not sure if this is still an issue
- global "cell" should be "cellSize" and a map property?
	- generally rewrite global and non-specific vars
- gme vs GAME
	- fine for now
- player vs pilgrim
	- player is dead? - dante is just a visitor
	- why is he a skull and other npc's are cat things?
	- fine for now, refer to "pilgrim" in writing if needed
- lines - game renderer ? and data
	- good for now

7.29.2020
- change room and path graphics based on level
	- texture displayed by room, not added to scene 
	- this might be different in other games ...

7.31.2020
- close pack, close ui text buttons - 

- add some randomness to the scores assigned by sins/good acts
	- applying sins to sinners must have some positive effect that's different from player
		- maybe player can test items on sinners?
		- why would something be a sin for a sinner and not the player?
	- move sin application to player class
		

- add color to hell's gate
- explain sin of giving food to sinner
	- simplify this? giving food is always good, giving a text is always bad?


- slowing down with wide screen
	- draw less things
	- restrict canvas size

- sins for blasphemy, fraud

12.4.2020
- observations coming back after a while
	- clicking sucks, make keyboard and option (what about for navigating menu and such?)
		- just do enter for map items, no menu
	- not sure if sin is being added to player correclty
	- move over pang of hunger message if you keep it
	- same with adding sins from sinners
	- accidentally clicked the gates of hell - have some confirmation?
	- pang of hunger not going away
	- levels seem too big
	- make trunk main branch?

12.5.20202
- for proc jam
	- music
		- does tone.js have a chorus synth? - i may have already this with catslair
	- need to figure out game mechanics
	- instructions
	- icon centered vertically over text so its not just on top when it changes
	- change mouse anims ... that code prob exists somehwere ...

- lines -
	- trying to separate shit
	- really only matters for games because the regular animations don't move
	- would be nice for faster frame rates ...
	- add to regular anim and test ... 
	- also fixes the stupid mouse issue .... 
	- should drawing be responsible for its own layer data?
	- Drawing class
		- can do all the calculations in there
		- needs nrwv from layer
		- make layer data part of drawing class
		- Point class ???
	- new names for stuff
		- dps - draw per second
		- lps - lines per second - or lc line count
		- fps - frames per second (frame animation)
		- renderer vs animation
			- renderer - dps
			- animation - fps and lps
				- both based on dps
	- use function/module structure?
	- get everythign to work then changes names
	- this approach seems to have got rid of those little gaps
		- does it look better with breaks?
		- should i care about this now?
		- if really want to go back, remove off[0] from first ctx.moveTo
		- the off using the next point must line them up or something
		- also doing that and increasing w does some weird effect
		- OR change k+1 to k
		- problem with lines connecting is that jiggle looks bad
		- maybe okay if moving away from jiggle ... 
		- adding an extra one fun too
	- should lpd be layer or anim?
		- if these are layer properties they should not be part of the draw props?
		- or rename draw props?
		- layers dont have l/lc so they need defaults ... 
	- issue with text being drawn multiple times ...
		- nice fix, only draw letters that are first instance in message
		- all letter move at same rate, change this???
		- text kind of looks better without breaks ... 
	- this is also gonna be an issue with textures ...
		- may need to count by each instance ...
		- or rewrite text/textures to just be multiple animations ...
			- then can't use animation states ...
		- textures will all have the same lines changes ...
		- this will be true as long as drawings save the nrvw data ...
		- fuck .... 
		- fuck ...
	- game example should have a texture on it...
		- yes textures double animate
		- lines changes maybe not that noticeable?
		- seems okay for now ... 
	- add texture locations is weird ...
	- test on inf hell then rename lps

- back to hell - 
	- textures and text are still glitching ... 
	- multiple text objects with same drawing ... fuck me ......
	- need something like the p5 drawn this frame thing

12.7.2020
- need to update text/texture only once per render
	- frame count or performance.now needs to come from renderer ... 
	- OH but text/textures only in games (so far ... )
	- OHHH but like any time there's multiple layers with the drawing it will be an issue ...
	- make global drawCount var
	- or make renderer a separate class that is used by game, animate, play ( this would be chill ... )

	- added to weirdness with textures ...
	- textures not updating right ...
	- make a mini map that's cool?????
	- speed is weird now ...
	- make quickRef blender style
	- fucks up rndr values if there are two instances of same drawing ... 
		- make layers keep all the random values etc?
		- integrate layers into drawing
		- ugh - prob makes sense ... drawing.layers

12.8.2020
- resizing map
	- there is a size that's too small for items to be placed...
	- it would be nice to figure out mathematically what that is ...
	- first off, we need more columns than rows or ratio for screen size ...
	- problem i think is having room with width of 1, that means there are no available cells
	- either need min room width of 2 or allow items places in all cells

- okay maybe ...
	- fight sinners (get morality points ... )
	- no pack, no "gifting"
	- just fuckin explore and die
	- don't have to delete the pack code etc just adjust for the jam

- wtf- 
	- current dynamics assume each item has one moral quality
	- black and white morality makes no sense

- for proc jam
	- music
		- does tone.js have a chorus synth? - i may have already this with catslair
	- need to figure out game mechanics
	- instructions
	- change mouse anims ... that code prob exists somehwere ...

- issues
	- icon centered vertically over text so its not just on top when it changes
	- selection arrow travels with character/map
	- glitching textures ... 
	- make hells gate a color (red?)
	- fuck me lines frame animation is glitchy again ... 
	- block under text for readability????
	- so many map based position bugs ... fix them all??? or just detect broken ones and rebuild?
	- easy wins - 
		- play again button?
		- nothing that wins with charon in there?
		- books come after level 1
	- score not being added wtffff
	- map not placed correctly
	- lines still having color toggle issues

12.9.2020
- desperate times call for despearate measures
	- im taking all the mouse/ui stuff
	- you read you eat you fight you sacrifice
	- ill make it more complicated later if i feel like it
	- no inventory
	- draw ui border??
	- add consume string to data
	- maybe bring pack back???? - reading books ups your morality blah blah

	- things i removed
		- pack
		- global sinner value
		- mouse events
		- arrow, interactive ui
		- item ui and ui events
		- pickup item so much ui shit ...
		- class/PickupItem.js
		- classes/HellTextButton.js
		- pack stuff in sinner
		- classes/PackItem.js
		- classes/buttonMixin
		- classes/Cursor.js
		- classes/Hellbuton.js
		- classes/HellTextButton
		- classes/itemMixin
		- classes/HellToggle
		- classes/Pack
		- classes/PackItem

12.10.2020
- figuring out map
- also maybe add a new build and tag the procjam??
- music

12.12.2020
- searchin for shit: /Users/owenroberts/gd/art/infinite_hell, -*.min.js, -*.min.js.map, -/node_modules

- strings for data
	- consume - eat, read, sacrifice, fight "action"
	- player - scripture
		`You gain knowledge of ${key}` : 
			`You are learned of ${key}` );
	- ate/read `You ${typeString} the ${item.label}.`

	- sinner
		`You and ${this.label} are equals in sin.`
		`The ${this.label} defeated you with sin.`
		`You defeated the ${this.label} with righteousness.`

		`fight ${this.label}`;