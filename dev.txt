3.5.2020
- fuck this takes forever
3.7.2020
	- fix starting point
	- buffer one cell
	- dirt more sparse
	- cluster walls
	- smaller skully
	- buffer half screen width at least
	- wall collisions
		- everything centered vs not centered
	- need puddles 
	- to do -
		- grass in hell?
		- partition collisions and test performance
		- player gets stuck while clicking...
			- adjust player collider
		- player spawns on wall ...
		- game better name for .data
		- text.js active vs sprite.js alive (really "visible")
		- item on wall ... 
		- item ui class 
4.3.2020
- after jam list of stuff to do
4.8.2020
	- get inventory buttons to work
		- consider adding separate button sprites ...
			- and remove over/out/down/up states from sprite class
		- add set position or position setter to sprite to make positions updates consistent
		- after adding sprite, should click on it to change menu
		- switch drop buttons ... 
		- invetory items/messages are not getting removed correctly ...
			- maybe just create and delete everything instead of moving everything around so much ...
4.9.2020	
	- rename "alive/active"
		- isActive is best for now
4.11.2020
	- optimize map generation
		- rooms take longer 
			- loading json takes time, many references to same json
			- this is probably normal
			- texture with many locations is loading a new animation for each one, readings drawings etc.
			- *implement the text approach to drawing an animation in multiple places ...
				- textures aren't interactive, can be anims not sprites...
				- walls have their own colliders
				- this is because drawings are unpacking arrays [x,y] to objects {x: 0, y: 0}
					- sacrificed load time for 
				- this is probably same issue with walls, they all textures with multiple locations ...
				- there is still an animation for every texture -- definitely game level issue
			- maybe game.load makes animations and somehow everything references the animations?
			- optimize animation load drawing time ... 
				- or just use [x, y]
			- *items were centering themselves, textures don't do that - items were also checking if they were on the fucking screen .... 
			- items would actually be fine if! you were using one animation instead of a million ... 
4.12.2020
	- game load anims ... 
	- no more src or fetch anywhere !!!!!
	- text wrap for messages based on 960 browser window ... or 1280
4.13.2020
	- upate game to class
		- then hell.js is class extending game? or game is object in hell.js?
		- need to settle on permanent name here because base classes refer to Game.ctx etc
			- do editor etc. later
			- Game class is really more like GameRenderer or something or GameEngine or LnsEngine
	- figure out how to add scenes and stuff
		- manager + scenemaanger
		- does this really save a lot of time?
		- i can just add things directly to scenes maybe ... 
		- i think this is pretty nice
	- do i really need to be able to say gme.scene ?
		- gme.scenes.current or gme.currentScene is clearer
		- but gme.scene is superfluous with scene manager
4.14.2020
	- finish lines timeline
		- collapse layers
			- save in settings? maybe use setting to look at settings within ui modules
		-  other functionality of layers/frames
			- cut segment etc, add to edit modal, or rewrite original funcs?
				- something that i want to do to one at a time vs multiple
					(multiple layers can be toggled...)
				- split modal for now, maybe frame based split button later (ignore toggle)
		- add tweens to timeline ...
		- cloning drawings for editing drawing in layer
		- drag and drop tweens would be fun ... 
		- tween/layer ui super class?
		- tween class, super for layer and tween ... endFrame, startFrame
		- fix toggle handler/onoff
			- really need to clarify what toggle "on" and "off" mean
4.15.2020
		- animation sub class for animate that uses layer class and more layer functions/getters/setters like get toggled layers
		- drawing class too??
			- useful for cut line, cut segment etc, then i dont have to repeat that code 
	- look at other lines/game issues
		- rename animation class ... fuck
		- new drawing doesn't retain new lines setup
		- insert doesn't work with layers ...
		- lines on sidecar dont take on mobile stuff ... uh duh
4.16.2020
		- zoom ui and canvas separately ...
		- cant draw on top part zoomed in after reset .... fixed by doing R/L instead of L/R
			- blocked by tooltip
		- state updates when using next prev
		- update canvas size when fitting to canvas ...
		- turn off cursor optoin  for ipad
		- apply wiggle to segments ... 
			- this looks cool
			- need to play with lines more ...
			- add option 
			- fuck
			- wiggle is applied 
			- hell yeah
		- lns.ui.timeline.panel.timeline is kinda weird
			- this seems fine
	- game		
		- drawSprites type list of sprites
			- this is covered with scenes
		- Game.sprites and Game.ui defaults
			- Game.data contains sprite info
			- Game.anims contains all loaded animations
		- Game.scenes default?
			- scene, scenemanager
4.17.2020
		- test performance of game with array vs object for ui/scenes
			- scene just uses array, i think thats better
		- loading may just have to be handled by individual games ....
			- nah we load anims now buddy
		- load animations first then make classes ...  yerp
		- what purpose do items have? why not just sprites?
			- update function not in sprite for map
				- item is a sprite that is part of the map, not ui
				- are enemies/obstacles items?
					- they do need to update
				- do all games need maps?
				- update is really more a MapItem thing ... maybe not a default part of a game?

			- might make more sense to call item GameSprite or GameItem or GameObject
			- ItemCollection
			- map uses items
			- scene also refers to item, but prob should be sprite
			- Sprite is the main default class, for UI and Item
			- Item used both as generic like a list has items and as a specific Item is a map version of sprite...
			- Entity is what i used for idtio ... 
				- Entity -> Interactive -> Pickup
				- Player
				- Sprite -> Character
				- Sprite -> Item -> Interactive
				- Sprit -> UI -> Toggle
			- Sprite is just a thing that can be rendered, clicked, moved
			- I think I prefer Entity as something that's in the game, vs Item is things character can collect, or like parts of something else
			- Item Collection is part of Hell Classes
		- adding SpriteCollection as Game Class - could just be Collection
			- Collection is list
			- Manager is object w keys
		- also fixed removing game items in hell message
		- also fixed current state changing issue moving to game
		- generally heading towards objects not automatically adding stuff
			- not anymore!
		- player/map relationship is super confusing ... 
			- easier now with scenes . player is just not on map
		- p5 play style camera? - for now no, this is more resolved with better understanding of map update system than previously
		- make a debug draw function
			- ? this already exists?
			- do i mean debug class?
		- really need to wait for sprites to actually load!
			- no anims!
		- just load json to make different animations ...
			- too many anim objects?
			- hell yes!
		- texture is really annoying, need to separate functions better
			- i think this is better sans src and json etc.
		- use more vectors
			- disadvantage is references getting stuck
			- Cool.Vector is also really long, vs p5.Vector or Cool.Vec or something
		- dont render until offset applied
			- did that shit
4.18.2020
	- js minifier?
		- https://developers.google.com/closure/compiler/
			- nah
		- minify by project vs minify in lines ...
		- try just infinite hell first
			- dont need any interface css ...
		- js is all over the place
		- gulp
			- https://www.freecodecamp.org/news/gulp-4-walk-through-with-example-code-c3c018eab306/
			- es6 issues
			- uglify-js only supports JavaScript (ECMAScript 5).
			- To minify ECMAScript 2015 or above, transpile using tools like Babel.
			- so im converting code to ecma < 5, how does that effect hell.js
		- this is pretty tight actually, but need a template file that works from main project directory and one that works on lines project
4.22.2020
	- finish game updates
		- stat class
			- done
		- sprite use w h instead of width and height
			- ? 
			- would have to refactor a ton of code
			- width and height are better names
			- size could be a vector - size.x and size.y
			- then center is just this.position.subtract(this.size.divide(2)) ... 
			- width and height can be getter/setters .. 
		 	+ - prune sprite.js
		 	- removing all scaling for individual sprites, can be brought back by sub class
		 	- same with physics
		 	- xy - just use x and y? - player.x signifies something else ... 
		 		- could make that mapXY or something which would make it more clear .... 
		 		- player.x player.y is where it is on map, position is where it starts and is drawn
4.23.2020
		- why does fps cap at 9?
			- updated the game update function with one requestAnim
			- added a different stats function - calculates fps over time
				http://jsfiddle.net/m1erickson/CtsY3/
			- may want to get something like mr doob
			- shows draw rate is closer to 10
			- frame rate caps around 43 in map, rises in the inventory - it is just drawing a lot
			- actually mr doob also uses this method sort of, shows range as well ... 
				https://github.com/mrdoob/stats.js/blob/master/src/Stats.js
				- just use this?
				- frames is always just 1?
			- fine for now

		- item vs sprite, params vs xy inconsistent
			- worked out
		- what the actual fuck
			- ?
		- need names of positions to make sense
			- ?
			- Entity 
				- position is really draw position (origin + offset)
				- origin is map position
				- 
		- item update func is more generic map thing
			- entity - thing on map
		- i'm dismantling this stupid fucking system backwards ..
			- hopefully it makes more sense now ....
		- player position isn't supposed to change - "draw position"
		- text + ui class for food 
			- better version of this idea implemented
		- consolidate button and toggle and text ... 
			- i think this is fine, mapped out everything
		- sub classes don't fetch - yes!
	- add gme load to gme constructor?
		- any reason to create game before loading?
		- yes ... loading screen
	- events class?
		- use mouse events and keyboard events separately?
		- any point in having events in separate file?
	- sprite and anim - use ctx parameter? (instead of gme)
		- they are all part of the game section ... 
		- or generic "app"
		- at least gme is probably unique
		- will gme always be called gme?
		- GAME created in class
4.25.2020
	- lines play update
	- consolidate play and timeline panels
		- but i don't really need those buttons open all the time?
		- blender design where timeline and vse are seprate ... 
		- these are technically different things ... fine with this for now
	- better name for animation.state vs animation.currentState - not clear that state is label/string and currentState is start/end values
		- use manager?
		- manager requires a class and i don't want to make a state class at this point
		- should i make a state class ?
			- also add states to the timeline ... 
		- related to range class ... start end and label
		- layers and tweens 
			- startFrame, endFrame
			- sf, ef, sv, ev
			- Range -> FrameRange
			- Tween (FrameRange + Range -> ValueRange)
			- State (FrameRange + Label
		)
		- do all this stuff later ...
	- way to always update ui ... ?
		- not really a clear way to do this...
		- could add it to every button callback but that would be over kill prob
	

4.26.2020
	- working on range class for fun?
		- only needed for animate layers to display the layers
		- LinesAnimation still uses {} layers
		- draw module uses Layer
		- is this useful for LinesAnimate if we want to create layer and drawing classes ?
		- tween goes in the animate folder if not
		- useful with tweens *if*
			- reset tweens automatically called
			- range has some sort of compare method ... 
			- do i really need to reset tweens?  can't i just do it manually?
			- couldn't it be useful?
			- or its a button
			- makes more sense to do it with shift paramters
	
- hell updates
	- what the fuck is crashing the map??
	- make ui class with arrow, metrics, positions/properties etc.
	- wall image changes glitch?
	- rename inventory to "pack"
	- update text line breaks with regex to check space followed by \n\r
	- figure out sinners + food/scripture
	- update other game components
	- room/path setup like the walls
		- ?
	- maps get progressively more complex
		- figure out probabilities of map balance ...
	- read and pick up icons (mouse cursor)
	- get rid of float numbers
	- move walls to hellmap?

- try set timeout with game loading
	- load is so much shorter it doesn't matter here
	- revisit with garden or when hell has a lot more assets
- game editor is a whole other story ....
	- update when we revisit garden - "we" lol
	- editor maybe gets its own folder
	- rename classes
	- css to main css folder
- update all interface classes and lines classes (maybe when we gulp ... )
- rewrite animate/interface/drawings ...
- performance test on mapping frames at beginning

5.26.2020
- prob missing indiecade deadline
- what's left to do?
	- sound
	- basically all of the game mechanics and drawings
	